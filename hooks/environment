#!/usr/bin/env bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=../lib/common.bash
. "$DIR/../lib/common.bash"


# Create a temporary directory with both BSD and GNU mktemp
TMPDIR=$(mktemp -d 2>/dev/null || mktemp -d -t 'buildkiteXXXX')

# Override the temporary directory if windows
if is_windows ; then
  TMPDIR="$PWD"
fi

echo "~~~ :buildkite: Requesting OIDC token from Buildkite"

HASH=$(echo "${BUILDKITE_REPO}" | awk -F'[:.]' '{ printf $3 }' | sha256sum | cut -c1-27)

PROJECT_NUMBER="${BUILDKITE_PLUGIN_OBLT_GOOGLE_AUTH_PROJECT_NUMBER:-"8560181848"}"
PROJECT_ID="${BUILDKITE_PLUGIN_OBLT_GOOGLE_AUTH_PROJECT_ID:-"elastic-observability"}"
WORKLOAD_IDENTITY_POOL_ID="buildkite"
WORKLOAD_IDENTITY_PROVIDER_ID="repo-${HASH}"
AUDIENCE="//iam.googleapis.com/projects/${PROJECT_NUMBER}/locations/global/workloadIdentityPools/${WORKLOAD_IDENTITY_POOL_ID}/providers/${WORKLOAD_IDENTITY_PROVIDER_ID}"
buildkite-agent oidc request-token --audience "$AUDIENCE" --lifetime "${BUILDKITE_PLUGIN_OBLT_GOOGLE_AUTH_LIFETIME:-1800}" > "$TMPDIR"/token.json
echo "Workload Identity Provider ID: ${WORKLOAD_IDENTITY_PROVIDER_ID}"

echo "~~~ :gcloud: Configuring Google Cloud credentials"

CREDENTIALS_FILE="$TMPDIR"/credentials.json
TOKEN_FILE="$TMPDIR"/token.json
if is_windows ; then
  # Convert paths to Windows format
  CREDENTIALS_FILE="$(cygpath -w "$CREDENTIALS_FILE")"
  TOKEN_FILE="$(cygpath -w "$TOKEN_FILE")"
fi

cat << JSON > "$TMPDIR"/credentials.json
{
  "type": "external_account",
  "audience": "$AUDIENCE",
  "subject_token_type": "urn:ietf:params:oauth:token-type:jwt",
  "token_url": "https://sts.googleapis.com/v1/token",
  "credential_source": {
    "file": "$TOKEN_FILE"
  }
}
JSON

export BUILDKITE_OIDC_TMPDIR="${TMPDIR}"
export GOOGLE_APPLICATION_CREDENTIALS="${CREDENTIALS_FILE}"
export CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE="${GOOGLE_APPLICATION_CREDENTIALS}"
export CLOUDSDK_CORE_PROJECT="${PROJECT_ID}"
export CLOUDSDK_PROJECT="${PROJECT_ID}"
export GCLOUD_PROJECT="${PROJECT_ID}"
export GCP_PROJECT="${PROJECT_ID}"
export GOOGLE_CLOUD_PROJECT="${PROJECT_ID}"

echo "~~~ :buildkite: Debugging only"
echo "BUILDKITE_OIDC_TMPDIR: ${BUILDKITE_OIDC_TMPDIR}"
echo "GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}"
echo "CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE: ${CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE}"
echo "TOKEN_FILE: ${TOKEN_FILE}"
if is_windows ; then
  echo "credentials-windows=$(cygpath -w "$TMPDIR/credentials.json")"
  echo "token-windows=$(cygpath -w "$TMPDIR/token.json")"
fi
